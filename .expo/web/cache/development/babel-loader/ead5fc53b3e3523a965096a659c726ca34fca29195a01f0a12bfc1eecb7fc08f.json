{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport RNStyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport { StyledComponent } from \"tailwindcss-react-native\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport React, { useLayoutEffect, useState } from \"react\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { FaMapMarkerAlt, FaStream } from \"react-icons/fa\";\nimport { firebase } from '@react-native-firebase/database';\nimport dish from \"../data/dish.json\";\nimport Header from \"../component/Header\";\nimport Footer from \"../component/Footer\";\nimport DishCard from \"../component/DishCard\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar HomeScreen = function HomeScreen() {\n  var navigation = useNavigation();\n  var _useState = useState(''),\n    _useState2 = _slicedToArray(_useState, 2),\n    text = _useState2[0],\n    setText = _useState2[1];\n  useLayoutEffect(function () {\n    navigation.setOptions({\n      headerShown: false\n    });\n  }, []);\n  var handleSearchBar = function handleSearchBar(e) {\n    setText(e.target.value);\n  };\n  return _jsxs(StyledComponent, {\n    className: \"min-w-screen min-h-screen flex flex-col justify-between items-center bg-white\",\n    component: SafeAreaView,\n    children: [_jsx(Header, {}), _jsx(StyledComponent, {\n      className: \"w-full flex  flex-row justify-start items-center bg-red-500 overflow-x-scroll\",\n      style: {\n        height: 500\n      },\n      component: View,\n      children: dish.map(function (d, index) {\n        return _jsx(DishCard, {\n          orgImage: d.originalURL,\n          image: d.imageURL,\n          name: d.name,\n          ingredients: d.ingredients,\n          steps: d.steps\n        }, index);\n      })\n    }), _jsx(Footer, {})]\n  });\n};\nexport default HomeScreen;\nglobalThis.tailwindcss_react_native_style = Object.assign(globalThis.tailwindcss_react_native_style || {}, RNStyleSheet.create({\n  \"relative\": {\n    \"position\": \"relative\"\n  },\n  \"flex\": {\n    \"display\": \"flex\"\n  },\n  \"w-full\": {\n    \"width\": \"100%\"\n  },\n  \"flex-row\": {\n    \"flexDirection\": \"row\"\n  },\n  \"flex-col\": {\n    \"flexDirection\": \"column\"\n  },\n  \"items-center\": {\n    \"alignItems\": \"center\"\n  },\n  \"justify-start\": {\n    \"justifyContent\": \"flex-start\"\n  },\n  \"justify-between\": {\n    \"justifyContent\": \"space-between\"\n  },\n  \"bg-pink-400\": {\n    \"backgroundColor\": \"rgba(244, 114, 182, 1)\"\n  },\n  \"bg-red-500\": {\n    \"backgroundColor\": \"rgba(239, 68, 68, 1)\"\n  },\n  \"bg-white\": {\n    \"backgroundColor\": \"rgba(255, 255, 255, 1)\"\n  }\n}));\nglobalThis.tailwindcss_react_native_media = Object.assign(globalThis.tailwindcss_react_native_media || {}, {});","map":{"version":3,"names":["React","useLayoutEffect","useState","useNavigation","FaMapMarkerAlt","FaStream","firebase","dish","Header","Footer","DishCard","jsx","_jsx","jsxs","_jsxs","HomeScreen","navigation","_useState","_useState2","_slicedToArray","text","setText","setOptions","headerShown","handleSearchBar","e","target","value","StyledComponent","className","component","SafeAreaView","children","style","height","View","map","d","index","orgImage","originalURL","image","imageURL","name","ingredients","steps","globalThis","tailwindcss_react_native_style","Object","assign","{}","RNStyleSheet","create","tailwindcss_react_native_media"],"sources":["D:/food_ordering_app-ReactNative/screen/HomeScreen.js"],"sourcesContent":["import { View, Text, TextInput, Image, ScrollView , SafeAreaView } from \"react-native\";\r\nimport React, { useLayoutEffect, useState } from \"react\";\r\nimport { useNavigation } from \"@react-navigation/native\";\r\nimport {FaMapMarkerAlt,FaStream} from \"react-icons/fa\";\r\nimport { firebase } from '@react-native-firebase/database';\r\nimport dish from \"../data/dish.json\";\r\nimport Header from '../component/Header';\r\nimport Footer from '../component/Footer';\r\nimport DishCard from \"../component/DishCard\";\r\n\r\n\r\nconst HomeScreen = () => {\r\n\r\n  const navigation = useNavigation();\r\n  const [text, setText] = useState('');\r\n\r\n  useLayoutEffect(() => {\r\n    navigation.setOptions({\r\n      headerShown: false,\r\n    });\r\n  }, []);\r\n  \r\n  const handleSearchBar = (e) =>{\r\n    setText(e.target.value);\r\n  }\r\n   \r\n  return (\r\n\r\n    <SafeAreaView className=\"min-w-screen min-h-screen flex flex-col justify-between items-center bg-white\">\r\n      \r\n      {/*  header ---------------------------------------------------------------------------------------*/}\r\n      <Header />\r\n      {/*  block ends here ----------------------------------------------------------------------------------------- */}\r\n      <View className=\"w-full flex  flex-row justify-start items-center bg-red-500 overflow-x-scroll\" style={{height:500}}>\r\n          {dish.map((d,index)=>{\r\n              return <DishCard key={index} orgImage={d.originalURL} image={d.imageURL} name={d.name} ingredients={d.ingredients} steps={d.steps} />\r\n          })}\r\n      </View>\r\n      {/*  Footer------------------------------------------------------------------------------ */}\r\n      <Footer />\r\n      {/* block ends here ------------------------------------------------------------------------------ */}\r\n    </SafeAreaView>\r\n   \r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n"],"mappings":";;;;;;;;;AACA,OAAOA,KAAK,IAAIC,eAAe,EAAEC,QAAQ,QAAQ,OAAO;AACxD,SAASC,aAAa,QAAQ,0BAA0B;AACxD,SAAQC,cAAc,EAACC,QAAQ,QAAO,gBAAgB;AACtD,SAASC,QAAQ,QAAQ,iCAAiC;AAC1D,OAAOC,IAAI;AACX,OAAOC,MAAM;AACb,OAAOC,MAAM;AACb,OAAOC,QAAQ;AAA8B,SAAAC,GAAA,IAAAC,IAAA;AAAA,SAAAC,IAAA,IAAAC,KAAA;AAG7C,IAAMC,UAAU,GAAG,SAAbA,UAAUA,CAAA,EAAS;EAEvB,IAAMC,UAAU,GAAGb,aAAa,EAAE;EAClC,IAAAc,SAAA,GAAwBf,QAAQ,CAAC,EAAE,CAAC;IAAAgB,UAAA,GAAAC,cAAA,CAAAF,SAAA;IAA7BG,IAAI,GAAAF,UAAA;IAAEG,OAAO,GAAAH,UAAA;EAEpBjB,eAAe,CAAC,YAAM;IACpBe,UAAU,CAACM,UAAU,CAAC;MACpBC,WAAW,EAAE;IACf,CAAC,CAAC;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,IAAMC,eAAe,GAAG,SAAlBA,eAAeA,CAAIC,CAAC,EAAI;IAC5BJ,OAAO,CAACI,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC;EACzB,CAAC;EAED,OAEEb,KAAA,CAAAc,eAAA;IAAcC,SAAS,EAAC,+EAA+E;IAAAC,SAAA,EAAAC,YAAA;IAAAC,QAAA,GAGrGpB,IAAA,CAACJ,MAAM,KAAG,EAEVI,IAAA,CAAAgB,eAAA;MAAMC,SAAS,EAAC,+EAA+E;MAACI,KAAK,EAAE;QAACC,MAAM,EAAC;MAAG,CAAE;MAAAJ,SAAA,EAAAK,IAAA;MAAAH,QAAA,EAC/GzB,IAAI,CAAC6B,GAAG,CAAC,UAACC,CAAC,EAACC,KAAK,EAAG;QACjB,OAAO1B,IAAA,CAACF,QAAQ;UAAa6B,QAAQ,EAAEF,CAAC,CAACG,WAAY;UAACC,KAAK,EAAEJ,CAAC,CAACK,QAAS;UAACC,IAAI,EAAEN,CAAC,CAACM,IAAK;UAACC,WAAW,EAAEP,CAAC,CAACO,WAAY;UAACC,KAAK,EAAER,CAAC,CAACQ;QAAM,GAA5GP,KAAK,CAA0G;MACzI,CAAC;IAAC,EACC,EAEP1B,IAAA,CAACH,MAAM,KAAG;EAAA,EAEG;AAGnB,CAAC;AAED,eAAeM,UAAU;AAAC+B,UAAA,CAAAC,8BAAA,GAAAC,MAAA,CAAAC,MAAA,CAAAH,UAAA,CAAAC,8BAAA,IAAAG,EAAA,EAAAC,YAAA,CAAAC,MAAA;EAAA;IAAA;EAAA;EAAA;IAAA;EAAA;EAAA;IAAA;EAAA;EAAA;IAAA;EAAA;EAAA;IAAA;EAAA;EAAA;IAAA;EAAA;EAAA;IAAA;EAAA;EAAA;IAAA;EAAA;EAAA;IAAA;EAAA;EAAA;IAAA;EAAA;EAAA;IAAA;EAAA;AAAA;AAAAN,UAAA,CAAAO,8BAAA,GAAAL,MAAA,CAAAC,MAAA,CAAAH,UAAA,CAAAO,8BAAA,IAAAH,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}